{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","swipeDistance","scrollToLeft","setState","props","stepDistance","step","itemWidth","scrollToRight","images","frameSize","containerWidth","length","this","animationDuration","isOnRightEdge","carouselStyle","width","listStyle","transform","transition","style","className","map","image","index","src","alt","toString","type","disabled","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uPAeaA,EAAb,4MACEC,MAAQ,CACNC,cAAe,GAFnB,EAKEC,aAAe,WACb,EAAKC,UAAS,SAAAH,GACZ,MAA4B,EAAKI,MAE7BC,EAFJ,EAAQC,KAAR,EAAcC,UAQd,OAJKP,EAAMC,cAAgBI,IACzBA,GAAgBL,EAAMC,eAGjB,CACLA,cAAeD,EAAMC,cAAgBI,OAhB7C,EAqBEG,cAAgB,WACd,EAAKL,UAAS,SAAAH,GACZ,MAEI,EAAKI,MADPK,EADF,EACEA,OAAQH,EADV,EACUA,KAAMI,EADhB,EACgBA,UAAWH,EAD3B,EAC2BA,UAGvBF,EAAeC,EAAOC,EAEpBI,EAAiBJ,EAAYE,EAAOG,OAM1C,OAJKZ,EAAMC,cAAgBU,GAAmBL,EAAOI,GAAaH,IAChEF,EAAeM,EAAiBX,EAAMC,cAAgBS,EAAYH,GAG7D,CACLN,cAAeD,EAAMC,cAAgBI,OApC7C,4CAyCE,WACE,IAAQJ,EAAkBY,KAAKb,MAAvBC,cACR,EAEIY,KAAKT,MADPK,EADF,EACEA,OAAQC,EADV,EACUA,UAAWH,EADrB,EACqBA,UAAWO,EADhC,EACgCA,kBAG1BC,EAAgBd,MAAoBM,EAAYE,EAAOG,OAAUF,EAAYH,GAE7ES,EAAgB,CACpBC,MAAM,GAAD,OAAKP,EAAYH,EAAjB,OAGDW,EAAY,CAChBD,MAAM,GAAD,OAAKV,EAAYE,EAAOG,OAAxB,MACLO,UAAU,cAAD,OAAgBlB,EAAhB,OACTmB,WAAW,aAAD,OAAeN,EAAf,OAGZ,OACE,sBAAKO,MAAOL,EAAeM,UAAU,WAArC,UACE,oBAAID,MAAOH,EAAWI,UAAU,iBAAhC,SACGb,EAAOc,KAAI,SAACC,EAAOC,GAAR,OACV,6BACE,qBAAKC,IAAKF,EAAOG,KAAMF,EAAQ,GAAGG,cAD3BJ,QAMb,sBAAKF,UAAU,iBAAf,UACE,wBACEA,UAAU,eACVO,KAAK,SACLC,SAA4B,IAAlB7B,EACV8B,QAASlB,KAAKX,aAJhB,SAMG,MAGH,wBACEoB,UAAU,eACVO,KAAK,SACLC,SAAUf,EACVgB,QAASlB,KAAKL,cAJhB,SAMG,gBArFb,GAA8BwB,IAAMC,WCP9BC,E,4MACJlC,MAAQ,CACNS,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWI,KAAKb,MAAhBS,OAER,OACE,sBAAKa,UAAU,MAAf,UAEE,gDAAmBb,EAAOG,OAA1B,aAEA,cAAC,EAAD,CACEH,OAAQA,EACRH,KAAM,EACNI,UAAW,EACXH,UAAW,IACXO,kBAAmB,a,GA7BXkB,IAAMC,WAoCTC,ICzCfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.614103ff.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\ninterface State {\n  swipeDistance: number\n}\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    swipeDistance: 0,\n  };\n\n  scrollToLeft = () => {\n    this.setState(state => {\n      const { step, itemWidth } = this.props;\n\n      let stepDistance = step * itemWidth;\n\n      if (-state.swipeDistance < stepDistance) {\n        stepDistance = -state.swipeDistance;\n      }\n\n      return {\n        swipeDistance: state.swipeDistance + stepDistance,\n      };\n    });\n  };\n\n  scrollToRight = () => {\n    this.setState(state => {\n      const {\n        images, step, frameSize, itemWidth,\n      } = this.props;\n\n      let stepDistance = step * itemWidth;\n\n      const containerWidth = itemWidth * images.length;\n\n      if (-state.swipeDistance > containerWidth - ((step + frameSize) * itemWidth)) {\n        stepDistance = containerWidth + state.swipeDistance - frameSize * itemWidth;\n      }\n\n      return {\n        swipeDistance: state.swipeDistance - stepDistance,\n      };\n    });\n  };\n\n  render() {\n    const { swipeDistance } = this.state;\n    const {\n      images, frameSize, itemWidth, animationDuration,\n    } = this.props;\n\n    const isOnRightEdge = swipeDistance === -(itemWidth * images.length - (frameSize * itemWidth));\n\n    const carouselStyle = {\n      width: `${frameSize * itemWidth}px`,\n    };\n\n    const listStyle = {\n      width: `${itemWidth * images.length}px`,\n      transform: `translateX(${swipeDistance}px)`,\n      transition: `transform ${animationDuration}ms`,\n    };\n\n    return (\n      <div style={carouselStyle} className=\"Carousel\">\n        <ul style={listStyle} className=\"Carousel__list\">\n          {images.map((image, index: number) => (\n            <li key={image}>\n              <img src={image} alt={(index + 1).toString()} />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"button-wrapper\">\n          <button\n            className=\"button-arrow\"\n            type=\"button\"\n            disabled={swipeDistance === 0}\n            onClick={this.scrollToLeft}\n          >\n            {'<'}\n          </button>\n\n          <button\n            className=\"button-arrow\"\n            type=\"button\"\n            disabled={isOnRightEdge}\n            onClick={this.scrollToRight}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}