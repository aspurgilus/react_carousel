{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scrollLeft","scrollToLeft","setState","props","step","itemWidth","stepDistance","scrollToRight","images","frameSize","containerWidth","length","this","animationDuration","carouselStyle","infinite","width","listStyle","transform","transition","style","className","map","image","index","src","alt","toString","classNames","buttonDisabled","type","disabled","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"yQAiBaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,GAFhB,EAKEC,aAAe,WACb,EAAKC,UAAS,SAAAH,GACZ,MAA4B,EAAKI,MAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAEVC,EAAeF,EAAOC,EAM1B,OAJKN,EAAMC,WAAaI,EAAOC,IAC7BC,GAAgBP,EAAMC,YAGjB,CACLA,WAAYD,EAAMC,WAAaM,OAhBvC,EAqBEC,cAAgB,WACd,EAAKL,UAAS,SAAAH,GACZ,MAEI,EAAKI,MADPK,EADF,EACEA,OAAQJ,EADV,EACUA,KAAMK,EADhB,EACgBA,UAAWJ,EAD3B,EAC2BA,UAGvBC,EAAeF,EAAOC,EAEpBK,EAAiBL,EAAYG,EAAOG,OAM1C,OAJKZ,EAAMC,WAAaU,GAAmBN,EAAOK,GAAaJ,IAC7DC,EAAeI,EAAiBX,EAAMC,WAAaS,EAAYJ,GAG1D,CACLL,WAAYD,EAAMC,WAAaM,OApCvC,4CAyCE,WACE,IAAQN,EAAeY,KAAKb,MAApBC,WACR,EAEIY,KAAKT,MADPK,EADF,EACEA,OAAQC,EADV,EACUA,UAAWJ,EADrB,EACqBA,UAAWQ,EADhC,EACgCA,kBAG1BC,GAJN,EACmDC,SAG7B,CACpBC,MAAM,GAAD,OAAKP,EAAYJ,EAAjB,QAODY,EAAY,CAChBC,UAAU,cAAD,OAAgBlB,EAAhB,OACTmB,WAAW,aAAD,OAAeN,EAAf,OAGZ,OACE,sBAAKO,MAAON,EAAeO,UAAU,WAArC,UACE,oBAAID,MAAOH,EAAWI,UAAU,iBAAhC,SACGb,EAAOc,KAAI,SAACC,EAAOC,GAAR,OACV,6BAAgB,qBAAKC,IAAKF,EAAOG,KAAMF,EAAQ,GAAGG,cAAzCJ,QAIb,sBAAKF,UAAU,iBAAf,UACE,wBACEA,UAAWO,IAAW,eAAgB,CAAEC,eAA+B,IAAf7B,IACxD8B,KAAK,SACLC,SAAyB,IAAf/B,EACVgC,QAASpB,KAAKX,aAJhB,SAMG,MAGH,wBACEoB,UAAWO,IAAW,eAAgB,CACpCC,eAAgB7B,MAAiBK,EAAYG,EAAOG,OAAUF,EAAYJ,KAE5EyB,KAAK,SACLC,SAAU/B,MAAiBK,EAAYG,EAAOG,OAAUF,EAAYJ,GACpE2B,QAASpB,KAAKL,cANhB,SAQG,gBAtFb,GAA8B0B,IAAMC,WCT9BC,E,4MACJpC,MAAQ,CACNS,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWI,KAAKb,MAAhBS,OAER,OACE,sBAAKa,UAAU,MAAf,UAEE,gDAAmBb,EAAOG,OAA1B,aAEA,cAAC,EAAD,CACEH,OAAQA,EACRJ,KAAM,EACNK,UAAW,EACXJ,UAAW,IACXQ,kBAAmB,IACnBE,UAAU,W,GA9BFkB,IAAMC,WAqCTC,IC1CfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.298f8b33.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ninterface State {\n  scrollLeft: number\n}\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    scrollLeft: 0,\n  };\n\n  scrollToLeft = () => {\n    this.setState(state => {\n      const { step, itemWidth } = this.props;\n\n      let stepDistance = step * itemWidth;\n\n      if (-state.scrollLeft < step * itemWidth) {\n        stepDistance = -state.scrollLeft;\n      }\n\n      return {\n        scrollLeft: state.scrollLeft + stepDistance,\n      };\n    });\n  };\n\n  scrollToRight = () => {\n    this.setState(state => {\n      const {\n        images, step, frameSize, itemWidth,\n      } = this.props;\n\n      let stepDistance = step * itemWidth;\n\n      const containerWidth = itemWidth * images.length;\n\n      if (-state.scrollLeft > containerWidth - ((step + frameSize) * itemWidth)) {\n        stepDistance = containerWidth + state.scrollLeft - frameSize * itemWidth;\n      }\n\n      return {\n        scrollLeft: state.scrollLeft - stepDistance,\n      };\n    });\n  };\n\n  render() {\n    const { scrollLeft } = this.state;\n    const {\n      images, frameSize, itemWidth, animationDuration, infinite,\n    } = this.props;\n\n    const carouselStyle = {\n      width: `${frameSize * itemWidth}px`,\n    };\n\n    if (infinite) {\n      // const containerWidth = itemWidth * images.length;\n    }\n\n    const listStyle = {\n      transform: `translateX(${scrollLeft}px)`,\n      transition: `transform ${animationDuration}ms`,\n    };\n\n    return (\n      <div style={carouselStyle} className=\"Carousel\">\n        <ul style={listStyle} className=\"Carousel__list\">\n          {images.map((image, index: number) => (\n            <li key={image}><img src={image} alt={(index + 1).toString()} /></li>\n          ))}\n        </ul>\n\n        <div className=\"button-wrapper\">\n          <button\n            className={classNames('button-arrow', { buttonDisabled: scrollLeft === 0 })}\n            type=\"button\"\n            disabled={scrollLeft === 0}\n            onClick={this.scrollToLeft}\n          >\n            {'<'}\n          </button>\n\n          <button\n            className={classNames('button-arrow', {\n              buttonDisabled: scrollLeft === -(itemWidth * images.length - (frameSize * itemWidth)),\n            })}\n            type=\"button\"\n            disabled={scrollLeft === -(itemWidth * images.length - (frameSize * itemWidth))}\n            onClick={this.scrollToRight}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}